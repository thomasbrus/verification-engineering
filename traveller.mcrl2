% CONFIG
% ======

% Aliasses
sort LocationId = Int;
sort CarrierId = Int;
sort CardId = Int;
sort StatusId = Int;

% Carrier ids
map NS, SYNTUS, TLS : CarrierId;
eqn TLS = 0;
eqn NS = 1;
eqn SYNTUS = 2;

%Status messages
map SUCCESSFUL_CHECKIN, SUCCESSFUL_CHECKOUT, UNSUCCESSFUL : StatusId;
eqn UNSUCCESSFUL = -1;
eqn SUCCESSFUL_CHECKOUT = 0;
eqn SUCCESSFUL_CHECKIN = 1;

map NUMBER_OF_CARDS : Nat;
eqn NUMBER_OF_CARDS = 3;

% Mapping from carrier ids to location ids (-1 when not checked in)
sort CardStatusMapping = CarrierId -> LocationId;

map default_card_mapping, default_card_values : CardStatusMapping;
eqn default_card_mapping = default_card_values[TLS -> -1][NS -> -1][SYNTUS -> -1];

% Mapping from two location ids two the price of that route
map prices, price_table : LocationId # LocationId -> Real;

var location_x, location_y : LocationId;
eqn location_x == location_y -> prices(location_x, location_y) = 0;
    location_x != location_y -> prices(location_x, location_y) = price_table(min(location_x, location_y), max(location_x,location_y));

eqn price_table(50, 51) = 1;
eqn price_table(51, 52) = 2;
eqn price_table(50, 52) = 3;

% ACTIONS
% =======

act
  show_card, read_card, show: CardId # CarrierId # LocationId; 
  send_card_info, receive_card_info, card_info: CardId # LocationId # LocationId # Real # Bool;
  send_card_info_tls, receive_card_info_tls, card_info_tls: CardId # CardStatusMapping # Real # Bool;
  write, update, process: CardId # LocationId # Real # Bool;
  write_tls, update_tls, process_tls: CardId # CardStatusMapping # Real # Bool;
  action_status, reader_status : CardId # StatusId # Real;

% PROCESSES
% =========

proc
  Card(card_id : Int, card_data : CardStatusMapping, credit : Real, is_checked_in : Bool) =
    sum carrier_id : CarrierId, location_id : LocationId . (0 <= carrier_id && carrier_id < 3) ->
      show_card(card_id, carrier_id, location_id) . (
        % In case of carrier
        (carrier_id != TLS) ->
          send_card_info(card_id, card_data(carrier_id), card_data(TLS), credit, is_checked_in) . (
            sum updated_location_id : LocationId, updated_credit : Real, updated_is_checked_in : Bool .
              update(card_id, updated_location_id, updated_credit, updated_is_checked_in) .
              sum received_status_id : StatusId . (-1<=received_status_id && received_status_id<=1) ->
                action_status(card_id, received_status_id, updated_credit) .
              Card(card_id, card_data[carrier_id -> updated_location_id][TLS -> -1], updated_credit, updated_is_checked_in)
          ) +

        % In case of TLS
        (carrier_id == TLS) ->
          send_card_info_tls(card_id, card_data, credit, is_checked_in) . (
            sum updated_card_status : CardStatusMapping, updated_credit : Real, updated_is_checked_in : Bool .
              update_tls(card_id, updated_card_status, updated_credit, updated_is_checked_in) .
              sum received_status_id : StatusId . (-1<=received_status_id && received_status_id<=1) ->
                action_status(card_id, received_status_id, updated_credit) . 
              Card(card_id, updated_card_status, updated_credit, updated_is_checked_in)
          )
      );

  CarrierReader(carrier_id : CarrierId, location_id : LocationId) = 
    sum card_id : CardId . (100 <= card_id && card_id < 100 + NUMBER_OF_CARDS) ->
      read_card(card_id, carrier_id, location_id) .
      sum received_location_id : LocationId, received_location_id_tls : LocationId, received_credit : Real, received_is_checked_in : Bool .
        receive_card_info(card_id, received_location_id, received_location_id_tls, received_credit, received_is_checked_in) . (
        ( 
          % Check in
          (!received_is_checked_in && received_credit > 0) ->
            ( write(card_id, location_id, received_credit, true) .
              action_status(card_id, SUCCESSFUL_CHECKIN, received_credit)
            ) +

          % Cannot check in (already checked in at another carrier)
          (received_is_checked_in && received_location_id == -1 && received_location_id_tls == -1) ->
            ( write(card_id, -1, received_credit, received_is_checked_in) .
              action_status(card_id, UNSUCCESSFUL, received_credit)
            ) +

          % Check in (but insufficient credit)
          (!received_is_checked_in && received_credit <= 0) ->
            ( write(card_id, -1, received_credit, received_is_checked_in) .
              action_status(card_id, UNSUCCESSFUL, received_credit)
            ) +

          % Check out at (was checked in at this carrier)
          (received_is_checked_in && received_location_id != -1) ->
            ( write(card_id, -1, received_credit - prices(location_id, received_location_id), false) .
              action_status(card_id, SUCCESSFUL_CHECKOUT, received_credit - prices(location_id, received_location_id))
            ) +

          % Check out at (was checked in at TLS)
          (received_is_checked_in && received_location_id == -1 && received_location_id_tls != -1) ->
            ( write(card_id, -1, received_credit - prices(location_id, received_location_id_tls), false) .
              action_status(card_id, SUCCESSFUL_CHECKOUT, received_credit - prices(location_id, received_location_id_tls))
            )
        ) .
        CarrierReader(carrier_id, location_id)
      );

  OvercheckReader(location_id : LocationId) = 
    sum card_id : CardId . (100 <= card_id && card_id < 100 + NUMBER_OF_CARDS) ->
      read_card(card_id, TLS, location_id) .
      sum received_card_status : CardStatusMapping, received_credit : Real, received_is_checked_in : Bool .
      receive_card_info_tls(card_id, received_card_status, received_credit, received_is_checked_in) . (
        ( % Check over
          (received_is_checked_in && received_card_status(TLS) != location_id && received_card_status(TLS) != -1) ->
            ( write_tls(card_id,
                        received_card_status[TLS -> location_id],
                        received_credit - prices(received_card_status(TLS), location_id),
                        true) .

              action_status(card_id, SUCCESSFUL_CHECKIN, received_credit - prices(received_card_status(TLS), location_id))
            ) +

          % Check over (but checked in at two carriers)
          (received_card_status(SYNTUS) != -1 && received_card_status(NS) != -1) ->
            ( write_tls(card_id, received_card_status, received_credit, received_is_checked_in) .
              action_status(card_id, UNSUCCESSFUL, received_credit)
            ) +
          
          % Check over (but not checked in)
          (!received_is_checked_in) ->
            ( write_tls(card_id, received_card_status, received_credit, received_is_checked_in) .
              action_status(card_id, UNSUCCESSFUL, received_credit)
            ) +

          % Check over (but second time in a row)
          (received_is_checked_in && received_card_status(TLS) == location_id) ->
            ( write_tls(card_id, received_card_status, received_credit, received_is_checked_in) .
              action_status(card_id, UNSUCCESSFUL, received_credit)
            ) +

          % Check out at NS (was checked in at TLS)
          (received_is_checked_in && received_card_status(NS) != -1) ->
            ( write_tls(card_id,
                        received_card_status[NS-> -1][TLS-> location_id],
                        received_credit - prices(received_card_status(NS), location_id),
                        received_is_checked_in) .

              action_status(card_id, SUCCESSFUL_CHECKIN, received_credit - prices(received_card_status(NS), location_id))
            ) +

          % Check out at Syntus (was checked in at TLS)
          (received_is_checked_in && received_card_status(SYNTUS) != -1) ->
            ( write_tls(card_id,
                        received_card_status[SYNTUS-> -1][TLS -> location_id],
                        received_credit - prices(received_card_status(SYNTUS), location_id),
                        received_is_checked_in) .

              action_status(card_id, SUCCESSFUL_CHECKIN, received_credit - prices(received_card_status(SYNTUS), location_id))
            )

        ) .         
        OvercheckReader(location_id)
      );

  System =
    Card(100, default_card_mapping, 5, false) ||
    % Card(101, default_card_mapping, 5, false) ||
    % Card(102, default_card_mapping, 5, false) ||
    CarrierReader(SYNTUS, 50) ||
    CarrierReader(SYNTUS, 51) ||
    CarrierReader(NS, 51) ||
    CarrierReader(NS, 52) ||
    OvercheckReader(51);

% INITIALIZATION
% ==============

init
  hide({ card_info, process, card_info_tls, process_tls },

    allow({ show, card_info, process, card_info_tls, process_tls, reader_status },
    
      comm({ action_status | action_status -> reader_status,
             send_card_info | receive_card_info -> card_info, 
             show_card | read_card -> show,
             write | update -> process, 
             write_tls | update_tls -> process_tls,
             send_card_info_tls | receive_card_info_tls -> card_info_tls }, System)));

