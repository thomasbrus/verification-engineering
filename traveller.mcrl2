% CONFIG
% ======

% Aliasses
sort LocationId = Int;
sort CarrierId = Int;
sort CardId = Int;

% Carrier ids
map NS, SYNTUS, TLS : CarrierId;
eqn TLS = 0;
eqn NS = 1;
eqn SYNTUS = 2;

map NUMBER_OF_CARDS : Nat;
eqn NUMBER_OF_CARDS = 3;

% Mapping from carrier ids to location ids (-1 when not checked in)
sort CardStatusMapping = CarrierId -> LocationId;

map default_card_mapping, default_card_values : CardStatusMapping;
eqn default_card_mapping = default_card_values[TLS -> -1][NS -> -1][SYNTUS -> -1];

% Mapping from two location ids two the price of that route
map prices, price_table : LocationId # LocationId -> Real;

var location_x, location_y : LocationId;
eqn location_x == location_y -> prices(location_x, location_y) = 0;
    location_x != location_y -> prices(location_x, location_y) = price_table(min(location_x, location_y), max(location_x,location_y));

eqn price_table(51, 52) = 1;
eqn price_table(52, 53) = 2;
eqn price_table(51, 53) = 3;

% ACTIONS
% =======

act
  show_card, read_card, show: CardId # CarrierId; 
  send_card_info, receive_card_info, card_info: CardId # LocationId # LocationId # Real;
  send_card_info_tls, receive_card_info_tls, card_info_tls: CardId # CardStatusMapping # Real;
  write, update, process: CardId # LocationId # Real;
  write_tls, update_tls, process_tls: CardId # CardStatusMapping # Real;
  action_successful, indication_successful : Bool;

% PROCESSES
% =========

proc
  Card(card_id : Int, card_data : CardStatusMapping, credit : Real) =
    sum carrier_id : CarrierId . (0 <= carrier_id && carrier_id < 3) ->
      show_card(card_id, carrier_id) .      
      (
        % In case of carrier
        (carrier_id != TLS) ->
          send_card_info(card_id, card_data(carrier_id), card_data(TLS), credit) .
          (action_successful(true) . sum updated_location_id : LocationId, updated_credit : Real . update(card_id, updated_location_id, updated_credit) . Card(card_id, card_data[carrier_id -> updated_location_id][TLS -> -1], updated_credit) + 
           action_successful(false) . Card(card_id, card_data, credit)) +

        % In case of TLS
        (carrier_id == TLS) ->
          send_card_info_tls(card_id, card_data, credit) .
          (action_successful(true) . sum updated_card_status : CardStatusMapping, updated_credit : Real . update_tls(card_id, updated_card_status, updated_credit) . Card(card_id, updated_card_status, updated_credit) +
            action_successful(false) . Card(card_id, card_data, credit))
      );

  CarrierReader(carrier_id : CarrierId, location_id : LocationId) = 
    sum card_id : CardId . (101 <= card_id && card_id < 101 + NUMBER_OF_CARDS) ->
      read_card(card_id, carrier_id) .
      sum received_location_id : LocationId, received_location_id_tls : LocationId, received_credit : Real .
        receive_card_info(card_id, received_location_id, received_location_id_tls, received_credit) .
      (
        (received_location_id != -1) ->
          (action_successful(true) . write(card_id, -1, received_credit - prices(location_id, received_location_id)) .
          CarrierReader(carrier_id, location_id)) +

        (received_location_id == -1 && received_location_id_tls != -1) ->
          (action_successful(true) . write(card_id, -1, received_credit - prices(location_id, received_location_id_tls)) .
          CarrierReader(carrier_id, location_id)) +

        (received_location_id == -1 && received_location_id_tls == -1 && received_credit > 0) ->
          (action_successful(true) . write(card_id, location_id, received_credit) .
          CarrierReader(carrier_id, location_id)) +

        (received_location_id == -1 && received_location_id_tls == -1 && received_credit <= 0) ->
          (action_successful(false) .
          CarrierReader(carrier_id, location_id))
      );

  OvercheckReader(location_id : LocationId) = 
    sum received_card_id : CardId . (101 <= received_card_id && received_card_id < 101 + NUMBER_OF_CARDS) -> read_card(received_card_id, TLS) .

      sum received_card_status : CardStatusMapping, received_credit : Real . (receive_card_info_tls(received_card_id, received_card_status, received_credit)) .
      (
        % Check out at NS, check in at TLS
        (received_card_status(NS) != -1) ->
          action_successful(true) . write_tls(received_card_id, received_card_status[NS-> -1][TLS-> location_id], received_credit - prices(received_card_status(NS), location_id)) .
          OvercheckReader(location_id) +

        % Check out at Syntus, check in at TLS
        (received_card_status(SYNTUS) != -1) ->
          action_successful(true) . write_tls(received_card_id, received_card_status[SYNTUS-> -1][TLS -> location_id], received_credit - prices(received_card_status(SYNTUS), location_id)) .
          OvercheckReader(location_id) +
      
        (received_card_status(TLS) != -1) ->
          action_successful(true) . write_tls(received_card_id, received_card_status[TLS -> location_id], received_credit - prices(received_card_status(TLS), location_id)) .
          OvercheckReader(location_id) +

        (received_card_status(TLS) == -1 && received_card_status(NS) == -1 && received_card_status(SYNTUS) == -1) ->
          action_successful(false) .
          OvercheckReader(location_id)
      );

  System =
    Card(101, default_card_mapping, 5) ||
    Card(102, default_card_mapping, 5) ||
    %Card(103, default_card_mapping, 5) ||
    CarrierReader(SYNTUS, 51) ||
    CarrierReader(SYNTUS, 53) ||
    OvercheckReader(53);

% INITIALIZATION
% ==============

init
  hide({ card_info, process, card_info_tls, process_tls },
    allow({ show, card_info, process, card_info_tls, process_tls, indication_successful },
      comm({
        action_successful | action_successful -> indication_successful,
        send_card_info | receive_card_info -> card_info, 
        show_card | read_card -> show,
        write | update -> process, 
        write_tls | update_tls -> process_tls,
        send_card_info_tls | receive_card_info_tls -> card_info_tls
      }, System)
    )
  );

